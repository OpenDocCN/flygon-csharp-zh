["```cs\ndotnet sdk check \n```", "```cs\n.NET SDKs:\nVersion                         Status\n-----------------------------------------------------------------------------\n3.1.412                         Up to date.\n5.0.202                         Patch 5.0.206 is available.\n... \n```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n      <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net6.0</TargetFramework>\n        <Nullable>enable</Nullable>\n        <ImplicitUsings>enable</ImplicitUsings>\n      </PropertyGroup>\n    </Project> \n    ```", "```cs\n    XDocument doc = new(); \n    ```", "```cs\n    The type or namespace name 'XDocument' could not be found (are you missing a using directive or an assembly reference?) \n    ```", "```cs\nusing System.Xml.Linq; // XDocument \n```", "```cs\n    string s1 = \"Hello\"; \n    String s2 = \"World\";\n    WriteLine($\"{s1} {s2}\"); \n    ```", "```cs\n    <ItemGroup>\n      <Using Remove=\"System\" />\n    </ItemGroup> \n    ```", "```cs\n    The type or namespace name 'String' could not be found (are you missing a using directive or an assembly reference?) \n    ```", "```cs\n    using System; // String \n    ```", "```cs\nWriteLine($\"int.MaxValue = {int.MaxValue:N0}\");\nWriteLine($\"nint.MaxValue = {nint.MaxValue:N0}\"); \n```", "```cs\nint.MaxValue = 2,147,483,647\nnint.MaxValue = 9,223,372,036,854,775,807 \n```", "```cs\n    dotnet new classlib -f netstandard2.0 \n    ```", "```cs\n    dotnet new globaljson --sdk-version 3.1.412 \n    ```", "```cs\n    {\n      \"sdk\": {\n        \"version\": \"3.1.412\"\n      }\n    } \n    ```", "```cs\n    dotnet new classlib \n    ```", "```cs\n    Could not execute because the application was not found or a compatible .NET SDK is not installed. \n    ```", "```cs\n    WriteLine(\"I can run everywhere!\");\n    WriteLine($\"OS Version is {Environment.OSVersion}.\");\n    if (OperatingSystem.IsMacOS())\n    {\n      WriteLine(\"I am macOS.\");\n    }\n    else if (OperatingSystem.IsWindowsVersionAtLeast(major: 10))\n    {\n      WriteLine(\"I am Windows 10 or 11.\");\n    }\n    else\n    {\n      WriteLine(\"I am some other mysterious OS.\");\n    }\n    WriteLine(\"Press ENTER to stop me.\");\n    ReadLine(); \n    ```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n      <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net6.0</TargetFramework>\n        <Nullable>enable</Nullable>\n        <ImplicitUsings>enable</ImplicitUsings>\n     **<RuntimeIdentifiers>**\n     **win10-x64;osx-x64;osx****.11.0****-arm64;linux-x64;linux-arm64**\n     **</RuntimeIdentifiers>**\n      </PropertyGroup>\n    </Project> \n    ```", "```cs\ndotnet --info \n```", "```cs\n.NET SDK (reflecting any global.json):\n Version:   6.0.100\n Commit:    22d70b47bc\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.19043\n OS Platform: Windows\n RID:         win10-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\6.0.100\\\nHost (useful for support):\n  Version: 6.0.0\n  Commit:  91ba01788d\n.NET SDKs installed:\n  3.1.412 [C:\\Program Files\\dotnet\\sdk]\n  5.0.400 [C:\\Program Files\\dotnet\\sdk]\n  6.0.100 [C:\\Program Files\\dotnet\\sdk]\n.NET runtimes installed:\n  Microsoft.AspNetCore.All 2.1.29 [...\\dotnet\\shared\\Microsoft.AspNetCore.All]\n... \n```", "```cs\n    dotnet publish -c Release -r win10-x64 \n    ```", "```cs\n    Microsoft (R) Build Engine version 17.0.0+073022eb4 for .NET\n    Copyright (C) Microsoft Corporation. All rights reserved.\n      Determining projects to restore...\n      Restored C:\\Code\\Chapter07\\DotNetEverywhere\\DotNetEverywhere.csproj (in 46.89 sec).\n      DotNetEverywhere -> C:\\Code\\Chapter07\\DotNetEverywhere\\bin\\Release\\net6.0\\win10-x64\\DotNetEverywhere.dll\n      DotNetEverywhere -> C:\\Code\\Chapter07\\DotNetEverywhere\\bin\\Release\\net6.0\\win10-x64\\publish\\ \n    ```", "```cs\n    dotnet publish -c Release -r osx-x64\n    dotnet publish -c Release -r osx.11.0-arm64\n    dotnet publish -c Release -r linux-x64\n    dotnet publish -c Release -r linux-arm64 \n    ```", "```cs\n    I can run everywhere!\n    OS Version is Microsoft Windows NT 10.0.19042.0.\n    I am Windows 10.\n    Press ENTER to stop me. \n    ```", "```cs\nI can run everywhere!\nOS Version is Unix 11.2.3\nI am macOS.\nPress ENTER to stop me. \n```", "```cs\ndotnet publish -r win10-x64 -c Release --self-contained=false\n/p:PublishSingleFile=true \n```", "```cs\n<PropertyGroup>\n  <OutputType>Exe</OutputType>\n  <TargetFramework>net6.0</TargetFramework>\n  <Nullable>enable</Nullable>\n  <ImplicitUsings>enable</ImplicitUsings>\n  <RuntimeIdentifiers>\n    win10-x64;osx-x64;osx.11.0-arm64;linux-x64;linux-arm64\n  </RuntimeIdentifiers>\n **<DebugType>embedded</DebugType>**\n</PropertyGroup> \n```", "```cs\n    dotnet publish -c Release -r win10-x64 /p:PublishSingleFile=true \n    ```", "```cs\n<PublishTrimmed>true</PublishTrimmed> \n```", "```cs\ndotnet publish ... **-p:PublishTrimmed=True** \n```", "```cs\n<PublishTrimmed>true</PublishTrimmed>\n<TrimMode>Link</TrimMode> \n```", "```cs\ndotnet publish ... **-p:PublishTrimmed=True -p:TrimMode=Link** \n```", "```cs\n    Code/Chapter07/DotNetEverywhere/bin/Release/net6.0/linux-x64 \n    ```", "```cs\n    Code/Chapter07/DotNetEverywhere/bin/Release/net6.0/linux-x64 \n    ```", "```cs\n    .module extern libSystem.Native\n    .assembly extern System.Runtime\n    {\n      .publickeytoken = (\n        b0 3f 5f 7f 11 d5 0a 3a\n      )\n      .ver 6:0:0:0\n    } \n    ```", "```cs\n    public static DirectoryInfo? GetParent(string path)\n    {\n      if (path == null)\n      {\n        throw new ArgumentNullException(\"path\");\n      }\n      if (path.Length == 0)\n      {\n        throw new ArgumentException(SR.Argument_PathEmpty, \"path\");\n      }\n      string fullPath = Path.GetFullPath(path);\n      string directoryName = Path.GetDirectoryName(fullPath);\n      if (directoryName == null)\n      {\n        return null;\n      }\n      return new DirectoryInfo(directoryName);\n    } \n    ```", "```cs\n    .method /* 06000067 */ public hidebysig static \n      class System.IO.DirectoryInfo GetParent (\n        string path\n      ) cil managed\n    {\n      .param [0]\n        .custom instance void System.Runtime.CompilerServices\n        .NullableAttribute::.ctor(uint8) = ( \n          01 00 02 00 00\n        )\n      // Method begins at RVA 0x62d4\n      // Code size 64 (0x40)\n      .maxstack 2\n      .locals /* 1100000E */ (\n        [0] string,\n        [1] string\n      )\n      IL_0000: ldarg.0\n      IL_0001: brtrue.s IL_000e\n      IL_0003: ldstr \"path\" /* 700005CB */\n      IL_0008: newobj instance void [System.Runtime]\n        System.ArgumentNullException::.ctor(string) /* 0A000035 */\n      IL_000d: throw\n      IL_000e: ldarg.0\n      IL_000f: callvirt instance int32 [System.Runtime]\n        System.String::get_Length() /* 0A000022 */\n      IL_0014: brtrue.s IL_0026\n      IL_0016: call string System.SR::get_Argument_PathEmpty() /* 0600004C */\n      IL_001b: ldstr \"path\" /* 700005CB */\n      IL_0020: newobj instance void [System.Runtime]\n        System.ArgumentException::.ctor(string, string) /* 0A000036 */\n      IL_0025: throw IL_0026: ldarg.0\n      IL_0027: call string [System.Runtime.Extensions]\n        System.IO.Path::GetFullPath(string) /* 0A000037 */\n      IL_002c: stloc.0 IL_002d: ldloc.0\n      IL_002e: call string [System.Runtime.Extensions]\n        System.IO.Path::GetDirectoryName(string) /* 0A000038 */\n      IL_0033: stloc.1\n      IL_0034: ldloc.1\n      IL_0035: brtrue.s IL_0039 IL_0037: ldnull\n      IL_0038: ret IL_0039: ldloc.1\n      IL_003a: newobj instance void \n        System.IO.DirectoryInfo::.ctor(string) /* 06000097 */\n      IL_003f: ret\n    } // end of method Directory::GetParent \n    ```", "```cs\n    <ItemGroup>\n      <PackageReference Include=\"newtonsoft.json\" Version=\"13.0.1\" />\n    </ItemGroup> \n    ```", "```cs\n<Project Sdk=\"Microsoft.NET.Sdk\">\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net6.0</TargetFramework>\n  </PropertyGroup>\n  <ItemGroup>\n **<PackageReference**\n **Include=****\"Microsoft.EntityFrameworkCore.Sqlite\"**\n **Version=****\"6.0.0\"** **/>**\n  </ItemGroup>\n</Project> \n```", "```cs\n<PackageReference\n  Include=\"Microsoft.EntityFrameworkCore.Sqlite\" \n  Version=\"6.0.0-preview.*\" /> \n```", "```cs\n<PackageReference Include=\"System.Net.Http\" Version=\"4.1.0-*\" />\n<PackageReference Include=\"Newtonsoft.Json\" Version=\"12.0.3-beta1\" /> \n```", "```cs\n    using System.Text.RegularExpressions;\n    namespace Packt.Shared\n    {\n      public static class StringExtensions\n      {\n        public static bool IsValidXmlTag(this string input)\n        {\n          return Regex.IsMatch(input,\n            @\"^<([a-z]+)([^<]+)*(?:>(.*)<\\/\\1>|\\s+\\/>)$\");\n        }\n        public static bool IsValidPassword(this string input)\n        {\n          // minimum of eight valid characters\n          return Regex.IsMatch(input, \"^[a-zA-Z0-9_-]{8,}$\");\n        }\n        public static bool IsValidHex(this string input)\n        {\n          // three or six valid hex number characters\n          return Regex.IsMatch(input,\n            \"^#?([a-fA-F0-9]{3}|[a-fA-F0-9]{6})$\");\n        }\n      }\n    } \n    ```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n      <PropertyGroup>\n        <TargetFramework>netstandard2.0</TargetFramework>\n     **<GeneratePackageOnBuild>****true****</GeneratePackageOnBuild>**\n     **<PackageId>Packt.CSdotnet.SharedLibrary</PackageId>**\n     **<PackageVersion>****6.0.0.0****</PackageVersion>**\n     **<Title>C****# 10 and .NET 6 Shared Library</Title>**\n     **<Authors>Mark J Price</Authors>**\n     **<PackageLicenseExpression>**\n     **MS-PL**\n     **</PackageLicenseExpression>**\n     **<PackageProjectUrl>**\n     **https:****//github.com/markjprice/cs10dotnet6**\n     **</PackageProjectUrl>**\n     **<PackageIcon>packt-csdotnet-sharedlibrary.png</PackageIcon>**\n     **<PackageRequireLicenseAcceptance>****true****</PackageRequireLicenseAcceptance>**\n     **<PackageReleaseNotes>**\n     **Example shared library packaged** **for** **NuGet.**\n     **</PackageReleaseNotes>**\n     **<Description>**\n     **Three extension methods to validate a** **string****value****.**\n     **</Description>**\n     **<Copyright>**\n     **Copyright ©** **2016-2021** **Packt Publishing Limited**\n     **</Copyright>**\n     **<PackageTags>****string** **extensions packt csharp dotnet</PackageTags>**\n      </PropertyGroup>\n     **<ItemGroup>**\n     **<None Include=****\"packt-csdotnet-sharedlibrary.png\"****>**\n     **<Pack>True</Pack>**\n     **<PackagePath></PackagePath>**\n     **</None>**\n     **</ItemGroup>**\n    </Project> \n    ```", "```cs\n    <ItemGroup>\n      <PackageReference Include=\"newtonsoft.json\" Version=\"13.0.1\" />\n     **<PackageReference Include=****\"packt.csdotnet.sharedlibrary\"**\n     **Version=****\"6.0.0\"** **/>**\n    </ItemGroup> \n    ```", "```cs\n    Write(\"Enter a color value in hex: \"); \n    string? hex = ReadLine(); // or \"00ffc8\"\n    WriteLine(\"Is {0} a valid color value? {1}\",\n      arg0: hex, arg1: hex.IsValidHex());\n    Write(\"Enter a XML element: \"); \n    string? xmlTag = ReadLine(); // or \"<h1 class=\\\"<\\\" />\"\n    WriteLine(\"Is {0} a valid XML element? {1}\", \n      arg0: xmlTag, arg1: xmlTag.IsValidXmlTag());\n    Write(\"Enter a password: \"); \n    string? password = ReadLine(); // or \"secretsauce\"\n    WriteLine(\"Is {0} a valid password? {1}\",\n      arg0: password, arg1: password.IsValidPassword()); \n    ```", "```cs\n    Enter a color value in hex: 00ffc8 \n    Is 00ffc8 a valid color value? True\n    Enter an XML element: <h1 class=\"<\" />\n    Is <h1 class=\"<\" /> a valid XML element? False \n    Enter a password: secretsauce\n    Is secretsauce a valid password? True \n    ```", "```cs\ndotnet tool install -g upgrade-assistant \n```", "```cs\n    <PackageReference\n      Include=\"dialectsoftware.collections.matrix\"\n      Version=\"1.0.0\" /> \n    ```", "```cs\n    Axis x = new(\"x\", 0, 10, 1);\n    Axis y = new(\"y\", 0, 4, 1);\n    Matrix<long> matrix = new(new[] { x, y });\n    for (int i = 0; i < matrix.Axes[0].Points.Length; i++)\n    {\n      matrix.Axes[0].Points[i].Label = \"x\" + i.ToString();\n    }\n    for (int i = 0; i < matrix.Axes[1].Points.Length; i++)\n    {\n      matrix.Axes[1].Points[i].Label = \"y\" + i.ToString();\n    }\n    foreach (long[] c in matrix)\n    {\n      matrix[c] = c[0] + c[1];\n    }\n    foreach (long[] c in matrix)\n    {\n      WriteLine(\"{0},{1} ({2},{3}) = {4}\",\n        matrix.Axes[0].Points[c[0]].Label,\n        matrix.Axes[1].Points[c[1]].Label,\n        c[0], c[1], matrix[c]);\n    } \n    ```", "```cs\n    warning NU1701: Package 'DialectSoftware.Collections.Matrix\n    1.0.0' was restored using '.NETFramework,Version=v4.6.1,\n    .NETFramework,Version=v4.6.2, .NETFramework,Version=v4.7,\n    .NETFramework,Version=v4.7.1, .NETFramework,Version=v4.7.2,\n    .NETFramework,Version=v4.8' instead of the project target framework 'net6.0'. This package may not be fully compatible with your project.\n    x0,y0 (0,0) = 0\n    x0,y1 (0,1) = 1\n    x0,y2 (0,2) = 2\n    x0,y3 (0,3) = 3\n    ... \n    ```", "```cs\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n      <PropertyGroup>\n        <OutputType>Exe</OutputType>\n        <TargetFramework>net6.0</TargetFramework>\n        <Nullable>enable</Nullable>\n        <ImplicitUsings>enable</ImplicitUsings>\n     **<EnablePreviewFeatures>****true****</EnablePreviewFeatures>**\n     **<LangVersion>preview</LangVersion>**\n      </PropertyGroup>\n    </Project> \n    ```", "```cs\n    using static System.Console;\n    Doer.DoSomething();\n    public interface IWithStaticAbstract\n    {\n      static abstract void DoSomething();\n    }\n    public class Doer : IWithStaticAbstract\n    {\n      public static void DoSomething()\n      {\n        WriteLine(\"I am an implementation of a static abstract method.\");\n      }\n    } \n    ```"]